#!/bin/bash

echo "üß™ SIMULA√á√ÉO DE TESTE - PostgreSQL Service Container"
echo "=================================================="
echo ""
echo "‚ö†Ô∏è  NOTA: Este teste simula o ambiente de service container"
echo "   Para testar completamente, reinicie o Codespace para"
echo "   ativar a nova configura√ß√£o em devcontainer.json"
echo ""

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}1. Validando Arquivos de Configura√ß√£o...${NC}"

# Verificar devcontainer.json
if [ -f ".devcontainer/devcontainer.json" ]; then
    if grep -q "docker-compose.codespaces.yml" ".devcontainer/devcontainer.json"; then
        echo -e "${GREEN}‚úÖ devcontainer.json configurado para service container${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è devcontainer.json pode n√£o estar configurado${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è devcontainer.json n√£o encontrado${NC}"
fi

# Verificar docker-compose.codespaces.yml
if [ -f ".devcontainer/docker-compose.codespaces.yml" ]; then
    echo -e "${GREEN}‚úÖ docker-compose.codespaces.yml encontrado${NC}"
    
    # Verificar se cont√©m servi√ßos necess√°rios
    if grep -q "services:" ".devcontainer/docker-compose.codespaces.yml"; then
        if grep -q "app:" ".devcontainer/docker-compose.codespaces.yml"; then
            echo -e "${GREEN}‚úÖ Servi√ßo 'app' configurado${NC}"
        fi
        if grep -q "db:" ".devcontainer/docker-compose.codespaces.yml"; then
            echo -e "${GREEN}‚úÖ Servi√ßo 'db' (PostgreSQL) configurado${NC}"
        fi
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è docker-compose.codespaces.yml n√£o encontrado${NC}"
fi

echo ""
echo -e "${BLUE}2. Validando Scripts de Setup...${NC}"

# Verificar scripts
for script in "wait-for-db.sh" "setup.sh" "start.sh"; do
    if [ -f ".devcontainer/scripts/$script" ]; then
        if [ -x ".devcontainer/scripts/$script" ]; then
            echo -e "${GREEN}‚úÖ .devcontainer/scripts/$script execut√°vel${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è .devcontainer/scripts/$script n√£o execut√°vel${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è .devcontainer/scripts/$script n√£o encontrado${NC}"
    fi
done

echo ""
echo -e "${BLUE}3. Validando Seeds de Banco...${NC}"

if [ -f "db/init/001_init.sql" ]; then
    echo -e "${GREEN}‚úÖ Seeds SQL configurados${NC}"
    echo "   Arquivo: db/init/001_init.sql"
else
    echo -e "${YELLOW}‚ö†Ô∏è Seeds SQL n√£o encontrados${NC}"
fi

echo ""
echo -e "${BLUE}4. Validando Configura√ß√£o Django...${NC}"

if [ -f "backend_django/.env" ]; then
    if grep -q "db:5432" "backend_django/.env"; then
        echo -e "${GREEN}‚úÖ Django configurado para hostname 'db'${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Django pode n√£o estar configurado para service container${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è Arquivo .env do Django n√£o encontrado${NC}"
fi

echo ""
echo -e "${BLUE}5. Validando Makefile...${NC}"

if [ -f "Makefile" ]; then
    if grep -q "test-integration" "Makefile"; then
        echo -e "${GREEN}‚úÖ Makefile atualizado com novos comandos${NC}"
    fi
    if grep -q "db-shell" "Makefile"; then
        echo -e "${GREEN}‚úÖ Comandos de database configurados${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è Makefile n√£o encontrado${NC}"
fi

echo ""
echo "=================================================="
echo -e "${GREEN}‚úÖ Configura√ß√£o do Service Container est√° pronta!${NC}"
echo ""
echo "üîÑ Para ativar completamente:"
echo "  1. Fa√ßa commit das mudan√ßas"
echo "  2. Reinicie o Codespace"
echo "  3. O novo devcontainer.json ser√° usado"
echo "  4. PostgreSQL rodar√° como service container"
echo ""
echo "üöÄ Ap√≥s reiniciar, teste com:"
echo "  ./test_integration_complete.sh"
echo "  make db-check"
echo "  make test-integration"
echo ""
echo "üéØ URLs esperadas:"
echo "  Backend: http://localhost:3333"
echo "  Frontend: http://localhost:5173"
echo "  Database: psql -h db -U postgres -d traknor"
